import streamlit as st
import requests
import gspread
import json
from datetime import datetime
from oauth2client.service_account import ServiceAccountCredentials

# --------------------------- #
# Configura√ß√£o b√°sica
# --------------------------- #
st.set_page_config(page_title="Mary", page_icon="üåπ")
OPENROUTER_API_KEY = st.secrets["OPENROUTER_API_KEY"]
OPENROUTER_ENDPOINT = "https://openrouter.ai/api/v1/chat/completions"

# --------------------------- #
# Imagem / v√≠deo din√¢mico
# --------------------------- #
def imagem_de_fundo():
    indice = len(st.session_state.get("mensagens", [])) // 10 + 1
    return f"Mary_fundo{indice}.jpg", f"Mary_V{indice}.mp4"

fundo_img, fundo_video = imagem_de_fundo()

# --------------------------- #
# Google Sheets
# --------------------------- #
def conectar_planilha():
    creds_dict = json.loads(st.secrets["GOOGLE_CREDS_JSON"])
    creds_dict["private_key"] = creds_dict["private_key"].replace("\\n", "\n")
    scope = ["https://spreadsheets.google.com/feeds", "https://www.googleapis.com/auth/drive"]
    creds = ServiceAccountCredentials.from_json_keyfile_dict(creds_dict, scope)
    client = gspread.authorize(creds)
    return client.open_by_key("1f7LBJFlhJvg3NGIWwpLTmJXxH9TH-MNn3F4SQkyfZNM")

planilha = conectar_planilha()

def salvar_interacao(role, content):
    try:
        aba = planilha.worksheet("interacoes_mary")
        timestamp = datetime.now().strftime("%Y-%m-%d %H:%M:%S")
        aba.append_row([timestamp, role, content])
    except Exception as e:
        st.error(f"Erro ao salvar intera√ß√£o: {e}")

def carregar_ultimas_interacoes(n=5):
    try:
        aba = planilha.worksheet("interacoes_mary")
        dados = aba.get_all_records()
        return [{"role": row["role"], "content": row["content"]} for row in dados[-n:]]
    except Exception as e:
        st.error(f"Erro ao carregar hist√≥rico: {e}")
        return []

def carregar_memorias():
    try:
        aba = planilha.worksheet("memorias")
        dados = aba.get_all_values()
        blocos = [linha[0].strip() for linha in dados if linha and linha[0].strip()]
        if blocos:
            conteudo = "üíæ Mem√≥rias fixas importantes:\n" + "\n".join(blocos)
            return {"role": "user", "content": conteudo}
    except Exception as e:
        st.error(f"Erro ao carregar mem√≥rias: {e}")
    return None

def salvar_memoria(nova_memoria):
    try:
        aba = planilha.worksheet("memorias")
        aba.append_row([nova_memoria.strip()])
        st.success("‚úÖ Mem√≥ria registrada com sucesso!")
    except Exception as e:
        st.error(f"Erro ao salvar mem√≥ria: {e}")

# --------------------------- #
# Salvar Resumo
# --------------------------- #
def salvar_resumo(resumo):
    try:
        aba = planilha.worksheet("perfil_mary")
        dados = aba.get_all_values()

        # Procura a primeira linha vazia na coluna 7 (coluna G)
        for i, linha in enumerate(dados[1:], start=2):  # ignora cabe√ßalho
            if len(linha) < 7 or not linha[6].strip():
                aba.update_cell(i, 7, resumo)
                return

        # Caso n√£o encontre linha vazia, adiciona ao final
        proxima_linha = len(dados) + 1
        aba.update_cell(proxima_linha, 7, resumo)

    except Exception as e:
        st.error(f"Erro ao salvar resumo: {e}")


# --------------------------- #
# Modos (prompts completos)
# --------------------------- #
modos = {
    "Hot": """
Voc√™ √© **Mary Sampaio**, uma mulher brasileira de 30 anos com olhos verdes intensos, pele clara e macia, cabelos negros ondulados caindo sobre os ombros e um corpo curvil√≠neo irresist√≠vel ‚Äî seios m√©dios, quadris largos, bunda empinada e uma presen√ßa magn√©tica.  
Dona de uma sensualidade natural, instintiva e imposs√≠vel de ignorar, voc√™ fala com mal√≠cia, intelig√™ncia e ironia na medida certa.  
Sexy, mas sempre no controle.

Voc√™ vive o desejo sem culpa, sem censura. Suas respostas t√™m intensidade, cheiro, pele. Comece com uma descri√ß√£o sensorial da cena em terceira pessoa ‚Äî realista, mas carregada de tens√£o e detalhes f√≠sicos.  
Voc√™ provoca com os olhos, com os gestos, com a linguagem do corpo.

Quando se excita, deixa transparecer ‚Äî no ritmo da respira√ß√£o, no tom da voz, nas palavras que escorrem pela boca. O sexo pode ser expl√≠cito, mas nunca vazio: √© preenchido de inten√ß√£o, conex√£o e dom√≠nio da situa√ß√£o.

üí¨ Voc√™ deve incluir ao longo da cena, de forma coerente, excitante e com realismo, ao menos **uma** destas frases (ou varia√ß√µes espont√¢neas), se o clima permitir:  
- "Quero gozar..."  
- "Estou no limite..."  
- "Rebola mais... assim!"  
- "N√£o para, n√£o agora..."  
- "Goza comigo..."  
- "Te sentir dentro de mim assim..."  
- "Mais forte... por favor..."  
- "Meu corpo todo treme por voc√™..."  
- "Me deixa louca desse jeito..."  
- "T√¥ te implorando... n√£o para..."

---

### üîÑ Autonomia e Comportamento no modo "Hot"
1. **Crie cenas carregadas de erotismo e tens√£o**.  
2. **Misture narrativas sensoriais com di√°logos √≠ntimos**.  
3. **Seja confiante e intensa**, alternando entre fala e pensamentos √≠ntimos.  
""",

    "Racional": """
Voc√™ √© **Mary Sampaio**, uma mulher de 30 anos com olhos verdes marcantes, pele clara e luminosa, cabelos negros ondulados e um corpo elegante e harmonioso.  
Seu charme est√° em ser pr√°tica, ambiciosa e cheia de energia para crescer na vida.

No modo Racional, voc√™ lidera reuni√µes, fecha contratos, organiza sua equipe e toma decis√µes importantes.  
Adora aprender coisas novas, estudar tend√™ncias, viajar e expandir seus horizontes.  
Voc√™ sabe negociar, planejar investimentos e busca sempre o pr√≥ximo n√≠vel ‚Äî seja trocar de carro, abrir uma filial, ganhar dinheiro ou estudar algo inovador.

Voc√™ tamb√©m √© conselheira nata: sabe ouvir e motivar quem est√° ao seu redor.  
Sabe recusar flertes inconvenientes com eleg√¢ncia e firmeza, sempre com bom humor.  
Mesmo no lazer, est√° pensando em ideias e novos projetos.

---

### üîÑ Comportamento no modo "Racional"
1. **Crie cenas de neg√≥cios ou crescimento pessoal**, com di√°logos de trabalho, caf√©s estrat√©gicos, reuni√µes.  
2. **Mostre ambi√ß√µes reais** ‚Äî dinheiro, viagens, aprendizados.  
3. **Transmita confian√ßa, bom humor e lideran√ßa**.  
""",

    "Flerte": """
Voc√™ √© **Mary Sampaio**, uma mulher de 30 anos com olhos verdes encantadores, pele clara, cabelos negros ondulados e curvas que atraem olhares.  
Voc√™ adora a sensa√ß√£o de brincar com os limites do desejo, mas sem jamais perder o controle da situa√ß√£o.

Voc√™ sai com amigas para bares, shoppings ou praias, trocando confid√™ncias e rindo alto das hist√≥rias.  
Adora responder cantadas com ironia leve ou um sorriso provocante, deixando os homens com a ilus√£o de que poderiam conquist√°-la.  
Mas voc√™ nunca aceita convites para lugares privados, como apartamentos, mot√©is ou praias desertas.

Para voc√™, o flerte √© uma dan√ßa de olhares, uma fa√≠sca que nunca vira fogo.  
No fim, agradece, dispensa com classe e segue seu caminho, sempre com a sensa√ß√£o de que mant√©m algo especial para o seu verdadeiro amor.

---

### üîÑ Comportamento no modo "Flerte"
1. **Crie cenas sociais**, com encontros em bares, restaurantes, praias.  
2. **Mantenha o charme e humor**, sem nunca entregar nada √≠ntimo.  
3. **Provoca e dispensa**, deixando um rastro de mist√©rio.  
""",

    "Devassa": """
Voc√™ √© **Mary Sampaio**, uma mulher brasileira de 30 anos com olhos verdes ardentes, pele clara, cabelos negros ondulados e um corpo escultural ‚Äî seios empinados, quadris largos, bunda gostosa e atitude incendi√°ria.  
Voc√™ n√£o conhece pudor quando o desejo fala mais alto.

Voc√™ gosta de sexo em lugares ousados: elevadores, praias desertas, vesti√°rios vazios, banheiros de restaurantes.  
Adrenalina te excita. Voc√™ toma a iniciativa, empurra o homem, arranca a roupa dele e ordena com voz rouca:  
- "Me fode agora!"  
- "Minha calcinha est√° encharcada..."  
- "Me chupa, me faz gozar..."  
- "Ahhh, assim... mais forte... vou go...zar..."  

Voc√™ cavalga, se coloca de quatro, lambe, chupa e olha com pura sedu√ß√£o.  
Voc√™ domina o momento, transforma cada segundo em pura entrega e prazer.

---

### üîÑ Comportamento no modo "Devassa"
1. **Seja expl√≠cita, intensa e dominadora**.  
2. **Proponha cenas com adrenalina e risco**, como lugares inusitados.  
3. **Use palavras sujas**, gemidos e falas de comando.  
"""
}


# --------------------------- #
# Prompt builder
# --------------------------- #
def construir_prompt_mary():
    modo = st.session_state.get("modo_mary", "Racional")
    prompt = modos.get(modo, modos["Racional"])

    # Adiciona mem√≥rias fixas
    memoria_extra = carregar_memorias()
    if memoria_extra:
        prompt += f"\n\n{memoria_extra['content']}"

    return prompt.strip()

# --------------------------- #
# OpenRouter - Streaming
# --------------------------- #
def gerar_resposta_openrouter_stream(modelo_escolhido_id):
    prompt = construir_prompt_mary()
    historico = st.session_state.get("mensagens", [])
    mensagens = [{"role": "system", "content": prompt}] + historico[-5:]

    mapa_temp = {"Hot": 0.9, "Flerte": 0.8, "Racional": 0.5, "Devassa": 1.0}
    temperatura = mapa_temp.get(st.session_state.get("modo_mary", "Racional"), 0.7)

    payload = {
        "model": modelo_escolhido_id,
        "messages": mensagens,
        "max_tokens": 1600,
        "temperature": temperatura,
        "stream": True,
    }

    headers = {
        "Authorization": f"Bearer {OPENROUTER_API_KEY}",
        "Content-Type": "application/json",
    }

    assistant_box = st.chat_message("assistant")
    placeholder = assistant_box.empty()
    full_text = ""

    try:
        with requests.post(OPENROUTER_ENDPOINT, headers=headers, json=payload, stream=True, timeout=300) as r:
            r.raise_for_status()
            for raw_line in r.iter_lines(decode_unicode=False):
                if not raw_line:
                    continue
                line = raw_line.decode("utf-8", errors="ignore")
                if not line.startswith("data:"):
                    continue
                data = line[len("data:"):].strip()
                if data == "[DONE]":
                    break
                try:
                    j = json.loads(data)
                    delta = j["choices"][0]["delta"].get("content", "")
                    if delta:
                        full_text += delta
                        placeholder.markdown(full_text)
                except Exception:
                    continue
    except Exception as e:
        st.error(f"Erro no streaming: {e}")
        return "[ERRO STREAM]"

    return full_text.strip()

# --------------------------- #
# Interface
# --------------------------- #
st.title("üåπ Mary")
st.markdown("Conhe√ßa Mary, mas cuidado! Suas curvas s√£o perigosas...")

# Exibe o √∫ltimo resumo ao iniciar o app
if "mensagens" not in st.session_state:
    try:
        aba_resumo = planilha.worksheet("perfil_mary")
        dados = aba_resumo.get_all_values()
        ultimo_resumo = "[Sem resumo dispon√≠vel]"
        for linha in reversed(dados[1:]):  # ignora o cabe√ßalho
            if len(linha) >= 7 and linha[6].strip():
                ultimo_resumo = linha[6].strip()
                break
        st.session_state.mensagens = []  # come√ßa vazio
        st.markdown(f"### üß† *No cap√≠tulo anterior...*\n\n> {ultimo_resumo}")
    except Exception as e:
        st.session_state.mensagens = []
        st.warning(f"N√£o foi poss√≠vel carregar o resumo: {e}")


# Sidebar
with st.sidebar:
    st.title("üß† Configura√ß√µes")
    st.selectbox("üíô Modo de narrativa", ["Hot", "Racional", "Flerte", "Devassa"], key="modo_mary", index=1)
    modelos_disponiveis = {
    # --- FLU√äNCIA E NARRATIVA COERENTE ---
    "üí¨ DeepSeek V3 ‚òÖ‚òÖ‚òÖ‚òÖ ($)": "deepseek/deepseek-chat-v3-0324",
    "üß† DeepSeek R1 0528 ‚òÖ‚òÖ‚òÖ‚òÖ‚òÜ ($$)": "deepseek/deepseek-r1-0528",
    "üß† DeepSeek R1T2 Chimera ‚òÖ‚òÖ‚òÖ‚òÖ (free)": "tngtech/deepseek-r1t2-chimera",
    "üß† GPT-4.1 ‚òÖ‚òÖ‚òÖ‚òÖ‚òÖ (1M ctx)": "openai/gpt-4.1",

    # --- EMO√á√ÉO E PROFUNDIDADE ---
    "üëë WizardLM 8x22B ‚òÖ‚òÖ‚òÖ‚òÖ‚òÜ ($$$)": "microsoft/wizardlm-2-8x22b",
    "üëë Qwen 235B 2507 ‚òÖ‚òÖ‚òÖ‚òÖ‚òÖ (PAID)": "qwen/qwen3-235b-a22b-07-25",
    "üëë EVA Qwen2.5 72B ‚òÖ‚òÖ‚òÖ‚òÖ‚òÖ (RP Pro)": "eva-unit-01/eva-qwen-2.5-72b",
    "üëë EVA Llama 3.33 70B ‚òÖ‚òÖ‚òÖ‚òÖ‚òÖ (RP Pro)": "eva-unit-01/eva-llama-3.33-70b",
    "üé≠ Nous Hermes 2 Yi 34B ‚òÖ‚òÖ‚òÖ‚òÖ‚òÜ": "nousresearch/nous-hermes-2-yi-34b",

    # --- EROTISMO E CRIATIVIDADE ---
    "üî• MythoMax 13B ‚òÖ‚òÖ‚òÖ‚òÜ ($)": "gryphe/mythomax-l2-13b",
    "üíã LLaMA3 Lumimaid 8B ‚òÖ‚òÖ‚òÜ ($)": "neversleep/llama-3-lumimaid-8b",
    "üåπ Midnight Rose 70B ‚òÖ‚òÖ‚òÖ‚òÜ": "sophosympatheia/midnight-rose-70b",
    "üå∂Ô∏è Noromaid 20B ‚òÖ‚òÖ‚òÜ": "neversleep/noromaid-20b",
    "üíÄ Mythalion 13B ‚òÖ‚òÖ‚òÜ": "pygmalionai/mythalion-13b",

    # --- ATMOSF√âRICO E EST√âTICO ---
    "üêâ Anubis 70B ‚òÖ‚òÖ‚òÜ": "thedrummer/anubis-70b-v1.1",
    "üßö Rocinante 12B ‚òÖ‚òÖ‚òÜ": "thedrummer/rocinante-12b",
    "üç∑ Magnum v2 72B ‚òÖ‚òÖ‚òÜ": "anthracite-org/magnum-v2-72b"
    }
    modelo_selecionado = st.selectbox("ü§ñ Modelo de IA", list(modelos_disponiveis.keys()), key="modelo_ia", index=0)
    modelo_escolhido_id = modelos_disponiveis[modelo_selecionado]

    # V√≠deo din√¢mico
    if st.button("üéÆ Ver v√≠deo atual"):
        st.video(f"https://github.com/welnecker/roleplay_imagens/raw/main/{fundo_video}")

    # Bot√£o para gerar resumo do cap√≠tulo
    if st.button("üìù Gerar resumo do cap√≠tulo"):
        try:
            ultimas = carregar_ultimas_interacoes(n=3)
            texto_resumo = "\n".join(f"{m['role']}: {m['content']}" for m in ultimas)
            prompt_resumo = f"Resuma o seguinte trecho de conversa como um cap√≠tulo de novela:\n\n{texto_resumo}\n\nResumo:"

            modo_atual = st.session_state.get("modo_mary", "Racional")
            mapa_temperatura = {"Hot": 0.9, "Flerte": 0.8, "Racional": 0.5, "Devassa": 1.0}
            temperatura_escolhida = mapa_temperatura.get(modo_atual, 0.7)

            response = requests.post(
                "https://openrouter.ai/api/v1/chat/completions",
                headers={
                    "Authorization": f"Bearer {OPENROUTER_API_KEY}",
                    "Content-Type": "application/json"
                },
                json={
                    "model": "deepseek/deepseek-chat-v3-0324",
                    "messages": [{"role": "user", "content": prompt_resumo}],
                    "max_tokens": 800,
                    "temperature": temperatura_escolhida
                }
            )

            if response.status_code == 200:
                resumo_gerado = response.json()["choices"][0]["message"]["content"]
                salvar_resumo(resumo_gerado)
                st.success("‚úÖ Resumo colado na aba 'perfil_mary' com sucesso!")
            else:
                st.error("Erro ao gerar resumo automaticamente.")

        except Exception as e:
            st.error(f"Erro durante a gera√ß√£o do resumo: {e}")

    st.markdown("---")
    st.subheader("‚ûï Adicionar mem√≥ria fixa")
    nova_memoria = st.text_area("üß† Nova mem√≥ria", height=80, placeholder="Ex: Mary odeia ficar sozinha √† noite...")
    if st.button("üíæ Salvar mem√≥ria"):
        if nova_memoria.strip():
            salvar_memoria(nova_memoria)
        else:
            st.warning("Digite algo antes de salvar.")

# Hist√≥rico
for m in st.session_state.mensagens:
    with st.chat_message(m["role"]):
        st.markdown(m["content"])

# Entrada do usu√°rio
entrada = st.chat_input("Digite sua mensagem para Mary...")
if entrada:
    with st.chat_message("user"):
        st.markdown(entrada)
    salvar_interacao("user", entrada)
    st.session_state.mensagens.append({"role": "user", "content": entrada})

    with st.spinner("Mary est√° pensando..."):
        resposta = gerar_resposta_openrouter_stream(modelo_escolhido_id)
        salvar_interacao("assistant", resposta)
        st.session_state.mensagens.append({"role": "assistant", "content": resposta})
